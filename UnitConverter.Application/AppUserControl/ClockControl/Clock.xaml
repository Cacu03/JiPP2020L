<UserControl x:Class="UnitConverter.Application.AppUserControl.ClockControl.Clock"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:UnitConverter.Application.AppUserControl.ClockControl"
             mc:Ignorable="d"
             DataContext="{Binding RelativeSource={RelativeSource Self}}"
             Width="174" Height="0"
             MinWidth="300" MinHeight="300">

    <UserControl.Resources>
        <local:RectangleMarginConverter x:Key="rectangleMarginConverter" />
        <local:AngleConverter x:Key="angleConverter" />
        <Storyboard x:Key="mainClockBorderShowStoryBoard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="mainClockBorder">
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="mainClockBorder">
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="mainClockBorderHideStoryBoard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="mainClockBorder">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="mainClockBorder">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>

    <Border Background="White" Padding="10" x:Name="mainClockBorder" RenderTransformOrigin="0.5,0.5">
        <Border.RenderTransform>
            <TransformGroup>
                <ScaleTransform ScaleY="0" ScaleX="0"/>
                <SkewTransform/>
                <RotateTransform/>
                <TranslateTransform/>
            </TransformGroup>
        </Border.RenderTransform>
        <Grid>

            <Grid.LayoutTransform>
                <RotateTransform Angle="-90" />
            </Grid.LayoutTransform>

            <Ellipse Stroke="{Binding color, FallbackValue=Black}" StrokeThickness="20" />
            <Rectangle x:Name="hourPointerRectangle" RadiusX="5" RadiusY="5" Width="50" Height="16"
                   RenderTransformOrigin="0,0.5" Fill="{Binding color, FallbackValue=Black}"
                   Margin="{Binding Path=Width, ElementName=hourPointerRectangle, Converter={StaticResource rectangleMarginConverter}}">
                <Rectangle.RenderTransform>
                    <RotateTransform Angle="0" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle x:Name="minutePointerRectangle" Height="10" RadiusX="5" RadiusY="5" Width="100"
                   RenderTransformOrigin="0,0.5" Fill="{Binding color, FallbackValue=Black}"
                   Margin="{Binding Path=Width, ElementName=minutePointerRectangle, Converter={StaticResource rectangleMarginConverter}}">
                <Rectangle.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Rectangle.RenderTransform>
            </Rectangle>
        </Grid>
    </Border>
</UserControl>
